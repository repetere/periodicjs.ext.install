<% include ../shared/header %>
	<div class="ts-container">
		<div class="ts-row">
			<div class="ts-col-span10 ts-col-nofloat">
					<div class="ts-row ts-form-row ts-text-center">
						<figure >
							<img style="width:auto; height:5em;"  src="/images/brand/periodic-favicon.png"/>
						</figure>
					</div>
				<div class="ts-document">
					<form action="/install/updateconfig" method="post" autocomplete="on" id="install_form" name="install_form" class="ts-form ts-ajaxforms" data-blockdefaultsuccess="true" data-successfunction="successFormPost">
						<input type="hidden" name="_csrf" value="<%= locals.token %>" >
						<div class="ts-row ts-form-row ts-no-heading-margin">
							<h2 class="ts-text-center">Configure your Application [<%- pagedata.appenvironment %>] Environment</h2>
						</div>
						<div class="ts-row ts-form-row">
							<div class="ts-col-span3  ts-screensm-text-left ts-screenxs-text-left ts-text-right ts-screensm-col-span12 ts-screenxs-col-span12">
								<label class="ts-label ">Application Name<a class="ts-toottip pop-tooltip" data-id="tt-appname">[?]</a></label>
							</div>
							<div class="ts-col-span9 ts-padding-sm ts-text-xs ts-screensm-col-span12 ts-screenxs-col-span12">
								<input class="ts-input noFormSubmit" type="text" placeholder="Application name" value="<%- pagedata.appname %>" name="appname"/>
							</div>
						</div>
						<div class="ts-row ts-form-row">
							<div class="ts-col-span3  ts-screensm-text-left ts-screenxs-text-left ts-text-right ts-screensm-col-span12 ts-screenxs-col-span12">
								<label class="ts-label ">MongoDB Connection URL <a class="ts-toottip pop-tooltip" data-id="tt-mongodb">[?]</a></label>
							</div>
							<div class="ts-col-span9 ts-padding-sm ts-text-xs ts-screensm-col-span12 ts-screenxs-col-span12">
								<input class="ts-input noFormSubmit" type="text" value="<%= pagedata.databaseurl%>" disabled="disabled" name="mongoconnectionurl"/>
							</div>
						</div>
						<div class="ts-row ts-form-row">
							<div class="ts-col-span3  ts-screensm-text-left ts-screenxs-text-left ts-text-right ts-screensm-col-span12 ts-screenxs-col-span12">
								<label class="ts-label ">Cookie Parser <a class="ts-toottip pop-tooltip" data-id="tt-cookieparser">[?]</a></label>
							</div>
							<div class="ts-col-span9 ts-padding-sm ts-text-xs ts-screensm-col-span12 ts-screenxs-col-span12">
								<input class="ts-input noFormSubmit" type="text" placeholder="<%= pagedata.cookieparser %>" value="<%= pagedata.cookieparser %>" name="cookieparser"/>
							</div>
						</div>
						<div class="ts-row ts-form-row">
							<div class="ts-col-span3  ts-screensm-text-left ts-screenxs-text-left ts-text-right ts-screensm-col-span12 ts-screenxs-col-span12">
								<label class="ts-label ">Session Secret <a class="ts-toottip pop-tooltip" data-id="tt-sessions">[?]</a></label>
							</div>
							<div class="ts-col-span9 ts-padding-sm ts-text-xs ts-screensm-col-span12 ts-screenxs-col-span12">
								<input class="ts-input noFormSubmit" type="text" placeholder="<%= pagedata.session_secret %>" value="<%= pagedata.session_secret %>" name="session_secret"/>
							</div>
							<section class="ts-clearfix"> 
								<div class="ts-col-span3  ts-screensm-text-left ts-screenxs-text-left ts-text-right ts-screensm-col-span12 ts-screenxs-col-span12">
									<label class="ts-label ">Application Session Type <a class="ts-toottip pop-tooltip" data-id="tt-sessions">[?]</a></label>
								</div>
								<div class="ts-col-span9 ts-padding-sm ts-text-xs ts-screensm-col-span12 ts-screenxs-col-span12">
									<div class="ts-row">
										<% var docstatus = [{
											"value":"mongo",
											"label":"Mongo Based Sessions"
											},{
											"value":"cookie",
											"label":"Cookie Based Sessions"
											},{
											"value":"false",
											"label":"Do not use sessions"
											}]; %>
										<select name="sessions" class="ts-input ts-col-span12">
											<% docstatus.forEach(function(status){ %>
												<option value="<%= status.value %>"><%= status.label %></option>
											<% }); %>
										</select> 
									</div>
								</div>
							</section>
							<section class="ts-clearfix"> 
								<div class="ts-col-span3  ts-screensm-text-left ts-screenxs-text-left ts-text-right ts-screensm-col-span12 ts-screenxs-col-span12">
									<label class="ts-label ">Template Engine <a class="ts-toottip pop-tooltip" data-id="tt-template">[?]</a></label>
								</div>
								<div class="ts-col-span9 ts-padding-sm ts-text-xs ts-screensm-col-span12 ts-screenxs-col-span12">
									<% var docstatus = [{
										"value":"ejs",
										"label":"EJS"
										}]; 
									%>
									<select name="template" class="ts-input ">
										<% docstatus.forEach(function(status){ %>
											<option value="<%= status.value %>"><%= status.label %></option>
										<% }); %>
									</select>							
								</div>
							</section>
							<section class="ts-clearfix">
								
								<div class="ts-col-span3  ts-screensm-text-left ts-screenxs-text-left ts-text-right ts-screensm-col-span12 ts-screenxs-col-span12">
									<label class="ts-label ">Install Admin <a class="ts-toottip pop-tooltip" data-id="tt-admin">[?]</a></label>
								</div>
								<div class="ts-col-span9 ts-padding-sm ts-screensm-col-span12 ts-screenxs-col-span12">
									<% var docstatus = [{
										"value":"use-admin",
										"label":"yes"
										},{
										"value":"no-admin",
										"label":"no"
										}]; %>
									<select name="admin" id="install-admin-select" class="ts-input ts-text-xs">
										<% docstatus.forEach(function(status){ %>
											<option value="<%= status.value %>"><%= status.label %></option>
										<% }); %>
									</select>





									<div id="admin-install-info" class="ts-row ts-form-row  no-margin" style="padding-top: .5em; background: #fbfbfb;">
										<div class="ts-row">
											<div class="ts-col-span3  ts-screensm-text-left ts-screenxs-text-left ts-text-right ts-screensm-col-span12 ts-screenxs-col-span12">
												<label class="ts-label ">Email</label>
											</div>
											<div class="ts-col-span9 ts-padding-sm ts-text-xs ts-screensm-col-span12 ts-screenxs-col-span12">
												<input class="ts-input noFormSubmit" type="text" placeholder="name@domain.com" value="" name="email"/>
											</div>
										</div>
										<div class="ts-row">
											<div class="ts-col-span3  ts-screensm-text-left ts-screenxs-text-left ts-text-right ts-screensm-col-span12 ts-screenxs-col-span12">
												<label class="ts-label ">Username</label>
											</div>
											<div class="ts-col-span9 ts-padding-sm ts-text-xs ts-screensm-col-span12 ts-screenxs-col-span12">
												<input class="ts-input noFormSubmit" type="text" placeholder="admin" value="" name="username"/>
											</div>
										</div>
										<div class="ts-row">
											<div class="ts-col-span3  ts-screensm-text-left ts-screenxs-text-left ts-text-right ts-screensm-col-span12 ts-screenxs-col-span12">
												<label class="ts-label ">Password</label>
											</div>
											<div class="ts-col-span9 ts-padding-sm ts-text-xs ts-screensm-col-span12 ts-screenxs-col-span12">
												<input class="ts-input noFormSubmit" type="text" placeholder="<%= pagedata.temppassword %>" value="<%= pagedata.temppassword %>" name="password"/>
											</div>
										</div>
										<div class="ts-row">
											<div class="ts-col-span3  ts-screensm-text-left ts-screenxs-text-left ts-text-right ts-screensm-col-span12 ts-screenxs-col-span12">
												<label class="ts-label ">Confirm Password</label>
											</div>
											<div class="ts-col-span9 ts-padding-sm ts-text-xs ts-screensm-col-span12 ts-screenxs-col-span12">
												<input class="ts-input noFormSubmit" type="password" placeholder="" value="" name="passwordconfirm"/>
											</div>
										</div>
									</div>
								</div>
							</section>
							<div class="ts-form">
								<section id="output-log-container" class="ts-row ts-form-row ts-margin-md ts-hidden">
									<h5>Console Output</h5>
									<div id="adminConsoleElementContent" class="ts-input ts-text-xs"></div>
								</section>
							</div>
							<div class="ts-col-span12">
								<div class="ts-row ts-form-row no-margin ts-text-center">
									<input class="ts-button noFormSubmit ts-button-accent-color ts-reg-size" type="button" value="Get Started" name="install_periodicjs_button" id="install_periodicjs_button">
								</div>
							</div>				
						</div>
					</form>
				</div>
				
			</div>
		</div>
	</div>
	<div class="ts-modal-hidden-container">
			<div class="ts-modal ts-modal-effect-1" id="tt-appname" data-name="tt-appname" >
				<h5>
					Application Name
				</h5><section class="ts-modal-content ts-bg-text-primary-color ts-shadow ts-no-
				heading-margin ts-padding-lg">
					<p>Pick a name, make it stick.</p>
					<p>For full documentation on configuring periodicjs configuration, see <a href="http://getperiodic.com/docs"><em>Periodic configuration</em></a>.
					</p>
				</section>
			</div>
			<div class="ts-modal ts-modal-effect-1" id="tt-mongodb" data-name="tt-mongodb" >
				<h5>
					MongoDB Connection URI
				</h5><section class="ts-modal-content ts-bg-text-primary-color ts-shadow ts-no-
				heading-margin ts-padding-lg">
					<p>Periodicjs requires a mongodb database to store documents, <strong class="ts-color-error">update "content/config/database.js" to update your mongo settings</strong></p>
					<p>For help installing locally check out <a href="http://docs.mongodb.org/manual/installation/">Installing MongoDB Locally</a> or use a free mongo hosting server like <a href="https://mongolab.com/">MongoLab</a></p>
					<p>The standard format of the MongoDB connection URI used to connect to a MongoDB database server. The format is the same forall official MongoDB drivers.</p>
					<p> For full documentation on connection URIs, see <a href="http://docs.mongodb.org/manual/reference/connection-string/"><em>MongoDB Connection String URI Format</em></a>.
					</p>
				</section>
			</div>
			<div class="ts-modal ts-modal-effect-1" id="tt-cookieparser" data-name="tt-cookieparser" >
				<section class="ts-modal-content ts-bg-text-primary-color ts-shadow ts-no-heading-margin ts-padding-lg">
					<h5>
						Cookie Parser
					</h5>
					<p>An HTTP cookie, web cookie, or browser cookie, is a small piece of data sent from a website and stored in a user's web browser while the user is browsing that website. Every time the user loads the website, the browser sends the cookie back to the server to notify the website of the user's previous activity. Cookies were designed to be a reliable mechanism for websites to remember stateful information (such as items in a shopping cart) or logging in. <a href="http://en.wikipedia.org/wiki/HTTP_cookie">HTTP cookie</a></p>
					<p>Parse Cookie header and populate req.cookies with an object keyed by the cookie names. Optionally you may enable signed cookie support by passing a secret string, which assigns req.secret so it may be used by other middleware.</p>
					<p> For full documentation on Cookie Parser, see <a href="https://github.com/expressjs/cookie-parser/"><em>expressjs/cookie-parser</em></a>.
					</p>
				</section>
			</div>
			<div class="ts-modal ts-modal-effect-1" id="tt-sessions" data-name="tt-sessions" >
				<section class="ts-modal-content ts-bg-text-primary-color ts-shadow ts-no-heading-margin ts-padding-lg">
					<h5>
						Application Session Type
					</h5>
					<p>Since sessions use cookies to keep track users we need both the cookie parser and the session framework. We also provide a secret to the session initializer, which provides a little more security for our session data.</p>
					<p>Sessions are accessible through the request object in each route. You can get and set properties just like you would when handling an object normally. For more: <a href="http://en.wikipedia.org/wiki/Session_(computer_science)">Node.js and Express - Sessions</a>, <a href="https://github.com/kcbanner/connect-mongo">MongoDB session store for Connect</a> and <a href="http://en.wikipedia.org/wiki/Session_(computer_science)">Session (computer science)</a>
					</p>
				</section>
			</div>
			<div class="ts-modal ts-modal-effect-1" id="tt-template" data-name="tt-template" >
				<section class="ts-modal-content ts-bg-text-primary-color ts-shadow ts-no-heading-margin ts-padding-lg">
					<h5>
						Template Engine
					</h5>
					<p>You can mix and match your view engine of choice that best fits in with your skillset and predilections. THere are many many more if you have other requirements. Go take a look and remember, like any open-source project, be aware of how well they are maintained before betting on them!</p>
					<p>For more: <a href="http://wildermuth.com/2014/03/24/Choose_Your_Own_Adventure_with_Node_js_View_Engines">Choose Your Own Adventure with Node.js View Engines</a></p>
				</section>
			</div>
			<div class="ts-modal ts-modal-effect-1" id="tt-theme" data-name="tt-theme" >
				<section class="ts-modal-content ts-bg-text-primary-color ts-shadow ts-no-heading-margin ts-padding-lg">
					<h5>
						Install Theme
					</h5>
					<p>If you need an initial theme</p>
					<p>For more: <a href="http://getperiodic.com/docs">Getting Started with Periodicjs</a></p>
				</section>
			</div>
			<div class="ts-modal ts-modal-effect-1" id="tt-admin" data-name="tt-admin" >
				<section class="ts-modal-content ts-bg-text-primary-color ts-shadow ts-no-heading-margin ts-padding-lg">
					<h5>
						Install Admin
					</h5>
					<p>If you need the admin interface, and an admin user</p>
					<p>For more: <a href="http://getperiodic.com/docs">Getting Started with Periodicjs</a></p>
				</section>
			</div>
  	<div class="ts-modal-overlay ts-bg-accent-color"></div>
	</div>
<% include ../shared/footer %>
